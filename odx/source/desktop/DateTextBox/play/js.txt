<script type="text/javascript">
require(["dojo/_base/declare", "dijit/form/DateTextBox", "dojo/date/locale", "dojo/dom", "dojo/domReady!"],
        function(declare, DateTextBox, locale, dom){
    declare("OracleDateTextBox", DateTextBox, {
        oracleFormat: {selector: 'date', datePattern: 'dd-MMM-yyyy', locale: 'en-us'},
        value: "", // prevent parser from trying to convert to Date object
        postMixInProperties: function(){ // change value string to Date object
            this.inherited(arguments);
            // convert value to Date object
            this.value = locale.parse(this.value, this.oracleFormat);
        },
        // To write back to the server in Oracle format, override the serialize method:
        serialize: function(dateObject, options){
            return locale.format(dateObject, this.oracleFormat).toUpperCase();
        }
    });
    function showServerValue(){
        dom.byId('toServerValue').value = document.getElementsByName('oracle')[0].value;
    }
    new OracleDateTextBox({
        value: "31-DEC-2009",
        name: "oracle",
        onChange: function(v){ setTimeout(showServerValue, 0)}
    }, "oracle").startup();
    showServerValue();
});
<label for="fromServerValue">Oracle date coming from server:</label>
<input id="fromServerValue" readonly="readonly" disabled="disabled" value="31-DEC-2009" /><br />
<label for="oracle">Client date:</label>
<input id="oracle" /><br/>
<label for="toServerValue">Oracle date going back to server:</label>
<input id="toServerValue" readonly="readonly" disabled="disabled" />